diff -ruN minetest-master/src/modalMenu.h minetest-freeminer/src/modalMenu.h
--- minetest-master/src/modalMenu.h	2016-09-03 16:15:52.709779000 -0700
+++ minetest-freeminer/src/modalMenu.h	2016-09-03 15:44:00.014741000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+modalMenu.h
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef MODALMENU_HEADER
@@ -24,6 +27,11 @@
 #ifdef HAVE_TOUCHSCREENGUI
 #include "touchscreengui.h"
 #endif
+#include "keycode.h"
+
+#ifdef __ANDROID__
+#include "porting_android.h"
+#endif
 
 class GUIModalMenu;
 
@@ -131,8 +139,33 @@
 
 	virtual void regenerateGui(v2u32 screensize) = 0;
 	virtual void drawMenu() = 0;
-	virtual bool preprocessEvent(const SEvent& event) { return false; };
-	virtual bool OnEvent(const SEvent& event) { return false; };
+	virtual bool preprocessEvent(const SEvent& event) {
+		#ifdef __ANDROID__
+		if (porting::canKeyboard()) {
+		// display software keyboard when clicking edit boxes
+			if (event.EventType == EET_MOUSE_INPUT_EVENT
+					&& event.MouseInput.Event == EMIE_LMOUSE_PRESSED_DOWN) {
+				gui::IGUIElement *hovered =
+					Environment->getRootGUIElement()->getElementFromPoint(
+						core::position2d<s32>(event.MouseInput.X, event.MouseInput.Y));
+				if (hovered && hovered->getType() == irr::gui::EGUIET_EDIT_BOX)
+					porting::displayKeyboard(true, porting::app_global, porting::jnienv);
+			}
+		}
+		#endif
+		return false;
+	};
+	virtual bool OnEvent(const SEvent& event) {
+		if(event.EventType == EET_KEY_INPUT_EVENT && event.KeyInput.PressedDown) {
+			KeyPress kp(event.KeyInput);
+			if (kp == EscapeKey || kp == CancelKey) {
+				quitMenu();
+				return true;
+			}
+		}
+
+		return false;
+	};
 	virtual bool pausesGame(){ return false; } // Used for pause menu
 
 protected:
