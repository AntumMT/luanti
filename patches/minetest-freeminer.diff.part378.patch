diff -ruN minetest-master/src/nameidmapping.h minetest-freeminer/src/nameidmapping.h
--- minetest-master/src/nameidmapping.h	2016-09-03 16:15:52.649779000 -0700
+++ minetest-freeminer/src/nameidmapping.h	2016-09-03 15:43:59.790740000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+nameidmapping.h
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef NAMEIDMAPPING_HEADER
@@ -22,7 +25,7 @@
 
 #include <string>
 #include <iostream>
-#include <set>
+#include <unordered_map>
 #include "irrlichttypes_bloated.h"
 #include "util/cpp11_container.h"
 
@@ -55,7 +58,7 @@
 		m_name_to_id.erase(name);
 	}
 	bool getName(u16 id, std::string &result) const{
-		UNORDERED_MAP<u16, std::string>::const_iterator i;
+		auto
 		i = m_id_to_name.find(id);
 		if(i == m_id_to_name.end())
 			return false;
@@ -63,7 +66,7 @@
 		return true;
 	}
 	bool getId(const std::string &name, u16 &result) const{
-		UNORDERED_MAP<std::string, u16>::const_iterator i;
+		auto
 		i = m_name_to_id.find(name);
 		if(i == m_name_to_id.end())
 			return false;
