diff -ruN minetest-master/src/database.cpp minetest-freeminer/src/database.cpp
--- minetest-master/src/database.cpp	2016-09-03 16:15:52.669779000 -0700
+++ minetest-freeminer/src/database.cpp	2016-09-03 15:43:59.802740000 -0700
@@ -1,24 +1,29 @@
 /*
-Minetest
+database.cpp
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "database.h"
 #include "irrlichttypes.h"
+#include <sstream>
+#include "util/string.h"
 
 
 /****************
@@ -67,3 +72,25 @@
 	return pos;
 }
 
+std::string Database::getBlockAsString(const v3s16 &pos) const {
+	std::ostringstream os;
+	os << "a" << pos.X << "," << pos.Y << "," << pos.Z;
+	return os.str().c_str();
+}
+
+v3s16 Database::getStringAsBlock(const std::string &i) const {
+	std::istringstream is(i);
+	v3s16 pos;
+	char c;
+	if (i[0] == 'a') {
+		is >> c; // 'a'
+		is >> pos.X;
+		is >> c; // ','
+		is >> pos.Y;
+		is >> c; // ','
+		is >> pos.Z;
+	} else { // old format
+		return getIntegerAsBlock(stoi64(i));
+	}
+	return pos;
+}
