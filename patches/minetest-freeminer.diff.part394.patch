diff -ruN minetest-master/src/network/networkprotocol.h minetest-freeminer/src/network/networkprotocol.h
--- minetest-master/src/network/networkprotocol.h	2016-09-03 16:15:52.641779000 -0700
+++ minetest-freeminer/src/network/networkprotocol.h	2016-09-03 15:43:59.786740000 -0700
@@ -1,26 +1,38 @@
 /*
-Minetest
+clientserver.h
 Copyright (C) 2010-2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef NETWORKPROTOCOL_HEADER
 #define NETWORKPROTOCOL_HEADER
 #include "util/string.h"
 
+#include <vector>
+#include <utility>
+#include <string>
+#include "../irrlichttypes.h"
+#include "../msgpack_fix.h"
+#include "../config.h"
+
+#define MAX_PACKET_SIZE 1400
+
 /*
 	changes by PROTOCOL_VERSION:
 
@@ -96,7 +108,7 @@
 		TOCLIENT_BREATH
 		TOSERVER_BREATH
 		range added to ItemDefinition
-		drowning, leveled and liquid_range added to ContentFeatures
+		drowning, leveled added to ContentFeatures
 		stepheight and collideWithObjects added to object properties
 		version, heat and humidity transfer in MapBock
 		automatic_face_movement_dir and automatic_face_movement_dir_offset
@@ -153,6 +165,9 @@
 #define CLIENT_PROTOCOL_VERSION_MIN_LEGACY 13
 #define CLIENT_PROTOCOL_VERSION_MAX LATEST_PROTOCOL_VERSION
 
+#define CLIENT_PROTOCOL_VERSION_FM 2
+#define SERVER_PROTOCOL_VERSION_FM 0
+
 // Constant that differentiates the protocol from random data and other protocols
 #define PROTOCOL_ID 0x4f457403
 
@@ -164,9 +179,12 @@
 
 #define TEXTURENAME_ALLOWED_CHARS "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.-"
 
+// TOCLIENT_* commands
 enum ToClientCommand
 {
-	TOCLIENT_HELLO = 0x02,
+};
+
+#define TOCLIENT_HELLO 0x02
 	/*
 		Sent after TOSERVER_INIT.
 
@@ -176,7 +194,7 @@
 		u32 supported auth methods
 		std::string username that should be used for legacy hash (for proper casing)
 	*/
-	TOCLIENT_AUTH_ACCEPT = 0x03,
+#define TOCLIENT_AUTH_ACCEPT 0x03
 	/*
 		Message from server to accept auth.
 
@@ -186,15 +204,32 @@
 		u32 : supported auth methods for sudo mode
 		      (where the user can change their password)
 	*/
-	TOCLIENT_ACCEPT_SUDO_MODE = 0x04,
+#define TOCLIENT_ACCEPT_SUDO_MODE 0x04
 	/*
 		Sent to client to show it is in sudo mode now.
 	*/
-	TOCLIENT_DENY_SUDO_MODE = 0x05,
+#define TOCLIENT_DENY_SUDO_MODE 0x05
 	/*
 		Signals client that sudo mode auth failed.
 	*/
-	TOCLIENT_INIT_LEGACY = 0x10,
+
+#define TOCLIENT_INIT_LEGACY 0x10
+//#define TOCLIENT_INIT 0x10
+enum {
+	// u8 deployed version
+	TOCLIENT_INIT_DEPLOYED,
+	// u64 map seed
+	TOCLIENT_INIT_SEED,
+	// float recommended send interval (server step)
+	TOCLIENT_INIT_STEP,
+	// v3f player's position
+	TOCLIENT_INIT_POS,
+	// json map params
+	TOCLIENT_INIT_MAP_PARAMS,
+	TOCLIENT_INIT_PROTOCOL_VERSION_FM,
+	TOCLIENT_INIT_WEATHER
+};
+
 	/*
 		Server's reply to TOSERVER_INIT.
 		Sent second after connected.
@@ -208,58 +243,56 @@
 		NOTE: The position in here is deprecated; position is
 		      explicitly sent afterwards
 	*/
-	TOCLIENT_ACCESS_DENIED = 0x0A,
+
+#define TOCLIENT_ACCESS_DENIED 0x0A
 	/*
 		u8 reason
 		std::string custom reason (if needed, otherwise "")
 		u8 (bool) reconnect
 	*/
-	TOCLIENT_BLOCKDATA = 0x20, //TODO: Multiple blocks
-	TOCLIENT_ADDNODE = 0x21,
+
+#define TOCLIENT_BLOCKDATA 0x20
+enum {
+	TOCLIENT_BLOCKDATA_POS,
+	TOCLIENT_BLOCKDATA_DATA,
+	TOCLIENT_BLOCKDATA_HEAT,
+	TOCLIENT_BLOCKDATA_HUMIDITY,
+	TOCLIENT_BLOCKDATA_STEP,
+	TOCLIENT_BLOCKDATA_CONTENT_ONLY,
+	TOCLIENT_BLOCKDATA_CONTENT_ONLY_PARAM1,
+	TOCLIENT_BLOCKDATA_CONTENT_ONLY_PARAM2
+};
+
+#define TOCLIENT_ADDNODE 0x21
+enum {
+	TOCLIENT_ADDNODE_POS,
+	TOCLIENT_ADDNODE_NODE,
+	TOCLIENT_ADDNODE_REMOVE_METADATA
+};
 	/*
 		v3s16 position
 		serialized mapnode
 		u8 keep_metadata // Added in protocol version 22
 	*/
-	TOCLIENT_REMOVENODE = 0x22,
-
-	TOCLIENT_PLAYERPOS = 0x23, // Obsolete
-	/*
-		[0] u16 command
-		// Followed by an arbitary number of these:
-		// Number is determined from packet length.
-		[N] u16 peer_id
-		[N+2] v3s32 position*100
-		[N+2+12] v3s32 speed*100
-		[N+2+12+12] s32 pitch*100
-		[N+2+12+12+4] s32 yaw*100
-	*/
-
-	TOCLIENT_PLAYERINFO = 0x24, // Obsolete
-	/*
-		[0] u16 command
-		// Followed by an arbitary number of these:
-		// Number is determined from packet length.
-		[N] u16 peer_id
-		[N] char[20] name
-	*/
-
-	TOCLIENT_OPT_BLOCK_NOT_FOUND = 0x25, // Obsolete
 
-	TOCLIENT_SECTORMETA = 0x26, // Obsolete
-	/*
-		[0] u16 command
-		[2] u8 sector count
-		[3...] v2s16 pos + sector metadata
-	*/
+#define TOCLIENT_REMOVENODE 0x22
+enum {
+	TOCLIENT_REMOVENODE_POS
+};
 
-	TOCLIENT_INVENTORY = 0x27,
+#define TOCLIENT_INVENTORY 0x27
+enum {
+	// string, serialized inventory
+	TOCLIENT_INVENTORY_DATA
+};
 	/*
 		[0] u16 command
 		[2] serialized inventory
 	*/
 
+	/*
 	TOCLIENT_OBJECTDATA = 0x28, // Obsolete
+	*/
 	/*
 		Sent as unreliable.
 
@@ -276,22 +309,39 @@
 			block objects
 	*/
 
-	TOCLIENT_TIME_OF_DAY = 0x29,
+
+#define TOCLIENT_TIME_OF_DAY 0x29
+enum {
+	// u16 time (0-23999)
+	TOCLIENT_TIME_OF_DAY_TIME,
+	// f32 time_speed
+	TOCLIENT_TIME_OF_DAY_TIME_SPEED
+};
 	/*
 		u16 time (0-23999)
 		Added in a later version:
 		f1000 time_speed
 	*/
 
-	// (oops, there is some gap here)
+#define TOCLIENT_CHAT_MESSAGE 0x30
+enum {
+	// string
+	TOCLIENT_CHAT_MESSAGE_DATA
+};
 
-	TOCLIENT_CHAT_MESSAGE = 0x30,
 	/*
 		u16 length
 		wstring message
 	*/
 
-	TOCLIENT_ACTIVE_OBJECT_REMOVE_ADD = 0x31,
+
+#define TOCLIENT_ACTIVE_OBJECT_REMOVE_ADD 0x31
+enum {
+	// list of ids
+	TOCLIENT_ACTIVE_OBJECT_REMOVE_ADD_REMOVE,
+	// list of [id, type, initialization_data]
+	TOCLIENT_ACTIVE_OBJECT_REMOVE_ADD_ADD
+};
 	/*
 		u16 count of removed objects
 		for all removed objects {
@@ -306,7 +356,21 @@
 		}
 	*/
 
-	TOCLIENT_ACTIVE_OBJECT_MESSAGES = 0x32,
+struct ActiveObjectAddData {
+	ActiveObjectAddData(u16 id_, u8 type_, std::string data_) : id(id_), type(type_), data(data_) {}
+	ActiveObjectAddData() : id(0), type(0), data("") {}
+	u16 id;
+	u8 type;
+	std::string data;
+	MSGPACK_DEFINE(id, type, data);
+};
+
+#define TOCLIENT_ACTIVE_OBJECT_MESSAGES 0x32
+enum {
+	// list of pair<id, message> where id is u16 and message is string
+	TOCLIENT_ACTIVE_OBJECT_MESSAGES_MESSAGES
+};
+typedef std::vector<std::pair<unsigned int, std::string> > ActiveObjectMessages;
 	/*
 		for all objects
 		{
@@ -316,25 +380,47 @@
 		}
 	*/
 
-	TOCLIENT_HP = 0x33,
+#define TOCLIENT_HP 0x33
+enum {
+	TOCLIENT_HP_HP
+};
 	/*
 		u8 hp
 	*/
 
-	TOCLIENT_MOVE_PLAYER = 0x34,
+#define TOCLIENT_MOVE_PLAYER 0x34
+enum {
+	// v3f player position
+	TOCLIENT_MOVE_PLAYER_POS,
+	// f32 pitch
+	TOCLIENT_MOVE_PLAYER_PITCH,
+	// f32 yaw
+	TOCLIENT_MOVE_PLAYER_YAW
+	//TOCLIENT_MOVE_PLAYER_SPEED
+
+};
 	/*
 		v3f1000 player position
 		f1000 player pitch
 		f1000 player yaw
 	*/
 
-	TOCLIENT_ACCESS_DENIED_LEGACY = 0x35,
+#define TOCLIENT_ACCESS_DENIED_LEGACY 0x35
+enum {
+	// string
+	TOCLIENT_ACCESS_DENIED_CUSTOM_STRING,
+	// u16 command
+	TOCLIENT_ACCESS_DENIED_REASON,
+	TOCLIENT_ACCESS_DENIED_RECONNECT
+};
 	/*
 		u16 reason_length
 		wstring reason
 	*/
 
+	/*
 	TOCLIENT_PLAYERITEM = 0x36, // Obsolete
+	*/
 	/*
 		u16 count of player items
 		for all player items {
@@ -344,13 +430,31 @@
 		}
 	*/
 
-	TOCLIENT_DEATHSCREEN = 0x37,
+#define TOCLIENT_PUNCH_PLAYER 0x36
+enum {
+	// v3f player speed add
+	TOCLIENT_PUNCH_PLAYER_SPEED,
+};
+
+
+#define TOCLIENT_DEATHSCREEN 0x37
+enum {
+	// bool set camera point target
+	TOCLIENT_DEATHSCREEN_SET_CAMERA,
+	// v3f camera point target (to point the death cause or whatever)
+	TOCLIENT_DEATHSCREEN_CAMERA_POINT
+};
 	/*
 		u8 bool set camera point target
 		v3f1000 camera point target (to point the death cause or whatever)
 	*/
 
-	TOCLIENT_MEDIA = 0x38,
+#define TOCLIENT_MEDIA 0x38
+enum {
+	// vector<pair<name, data>>
+	TOCLIENT_MEDIA_MEDIA
+};
+typedef std::vector<std::pair<std::string, std::string> > MediaData;
 	/*
 		u16 total number of texture bunches
 		u16 index of this bunch
@@ -365,26 +469,39 @@
 		string url
 	*/
 
+	/*
 	TOCLIENT_TOOLDEF = 0x39,
+	*/
 	/*
 		u32 length of the next item
 		serialized ToolDefManager
 	*/
 
-	TOCLIENT_NODEDEF = 0x3a,
+#define TOCLIENT_NODEDEF 0x3a
+enum {
+	TOCLIENT_NODEDEF_DEFINITIONS,
+	TOCLIENT_NODEDEF_DEFINITIONS_ZIP
+};
 	/*
 		u32 length of the next item
 		serialized NodeDefManager
 	*/
 
+	/*
 	TOCLIENT_CRAFTITEMDEF = 0x3b,
+	*/
 	/*
 		u32 length of the next item
 		serialized CraftiItemDefManager
 	*/
 
-	TOCLIENT_ANNOUNCE_MEDIA = 0x3c,
-
+#define TOCLIENT_ANNOUNCE_MEDIA 0x3c
+enum {
+	// list of [string name, string sha1_digest]
+	TOCLIENT_ANNOUNCE_MEDIA_LIST,
+	// string, url of remote media server
+	TOCLIENT_ANNOUNCE_MEDIA_REMOTE_SERVER
+};
 	/*
 		u32 number of files
 		for each texture {
@@ -395,13 +512,37 @@
 		}
 	*/
 
-	TOCLIENT_ITEMDEF = 0x3d,
+#define TOCLIENT_ITEMDEF 0x3d
+enum {
+	TOCLIENT_ITEMDEF_DEFINITIONS,
+	TOCLIENT_ITEMDEF_DEFINITIONS_ZIP
+};
+
 	/*
 		u32 length of next item
 		serialized ItemDefManager
 	*/
 
-	TOCLIENT_PLAY_SOUND = 0x3f,
+typedef std::vector<std::pair<std::string, std::string> > MediaAnnounceList;
+
+#define TOCLIENT_PLAY_SOUND 0x3f
+enum {
+	// s32
+	TOCLIENT_PLAY_SOUND_ID,
+	// string
+	TOCLIENT_PLAY_SOUND_NAME,
+	// f32
+	TOCLIENT_PLAY_SOUND_GAIN,
+	// u8
+	TOCLIENT_PLAY_SOUND_TYPE,
+	// v3f
+	TOCLIENT_PLAY_SOUND_POS,
+	// u16
+	TOCLIENT_PLAY_SOUND_OBJECT_ID,
+	// bool
+	TOCLIENT_PLAY_SOUND_LOOP
+};
+
 	/*
 		s32 sound_id
 		u16 len
@@ -413,12 +554,20 @@
 		u8 loop (bool)
 	*/
 
-	TOCLIENT_STOP_SOUND = 0x40,
+#define TOCLIENT_STOP_SOUND 0x40
+enum {
+	// s32
+	TOCLIENT_STOP_SOUND_ID
+};
 	/*
 		s32 sound_id
 	*/
 
-	TOCLIENT_PRIVILEGES = 0x41,
+#define TOCLIENT_PRIVILEGES 0x41
+enum {
+	// list of strings
+	TOCLIENT_PRIVILEGES_PRIVILEGES
+};
 	/*
 		u16 number of privileges
 		for each privilege
@@ -426,30 +575,48 @@
 			u8[len] privilege
 	*/
 
-	TOCLIENT_INVENTORY_FORMSPEC = 0x42,
+#define TOCLIENT_INVENTORY_FORMSPEC 0x42
+enum {
+	// string
+	TOCLIENT_INVENTORY_FORMSPEC_DATA
+};
+
 	/*
 		u32 len
 		u8[len] formspec
 	*/
 
-	TOCLIENT_DETACHED_INVENTORY = 0x43,
-	/*
-		[0] u16 command
-		u16 len
-		u8[len] name
-		[2] serialized inventory
-	*/
+#define TOCLIENT_DETACHED_INVENTORY 0x43
+enum {
+	TOCLIENT_DETACHED_INVENTORY_NAME,
+	TOCLIENT_DETACHED_INVENTORY_DATA
+};
 
-	TOCLIENT_SHOW_FORMSPEC = 0x44,
-	/*
-		[0] u16 command
-		u32 len
-		u8[len] formspec
-		u16 len
-		u8[len] formname
-	*/
+#define TOCLIENT_SHOW_FORMSPEC 0x44
+enum {
+	// string formspec
+	TOCLIENT_SHOW_FORMSPEC_DATA,
+	// string formname
+	TOCLIENT_SHOW_FORMSPEC_NAME
+};
 
-	TOCLIENT_MOVEMENT = 0x45,
+#define TOCLIENT_MOVEMENT 0x45
+// all values are floats here
+enum {
+	TOCLIENT_MOVEMENT_ACCELERATION_DEFAULT,
+	TOCLIENT_MOVEMENT_ACCELERATION_AIR,
+	TOCLIENT_MOVEMENT_ACCELERATION_FAST,
+	TOCLIENT_MOVEMENT_SPEED_WALK,
+	TOCLIENT_MOVEMENT_SPEED_CROUCH,
+	TOCLIENT_MOVEMENT_SPEED_FAST,
+	TOCLIENT_MOVEMENT_SPEED_CLIMB,
+	TOCLIENT_MOVEMENT_SPEED_JUMP,
+	TOCLIENT_MOVEMENT_LIQUID_FLUIDITY,
+	TOCLIENT_MOVEMENT_LIQUID_FLUIDITY_SMOOTH,
+	TOCLIENT_MOVEMENT_LIQUID_SINK,
+	TOCLIENT_MOVEMENT_GRAVITY,
+	TOCLIENT_MOVEMENT_FALL_AERODYNAMICS
+};
 	/*
 		f1000 movement_acceleration_default
 		f1000 movement_acceleration_air
@@ -465,7 +632,18 @@
 		f1000 movement_gravity
 	*/
 
-	TOCLIENT_SPAWN_PARTICLE = 0x46,
+#define TOCLIENT_SPAWN_PARTICLE 0x46
+enum {
+	TOCLIENT_SPAWN_PARTICLE_POS,
+	TOCLIENT_SPAWN_PARTICLE_VELOCITY,
+	TOCLIENT_SPAWN_PARTICLE_ACCELERATION,
+	TOCLIENT_SPAWN_PARTICLE_EXPIRATIONTIME,
+	TOCLIENT_SPAWN_PARTICLE_SIZE,
+	TOCLIENT_SPAWN_PARTICLE_COLLISIONDETECTION,
+	TOCLIENT_SPAWN_PARTICLE_VERTICAL,
+	TOCLIENT_SPAWN_PARTICLE_TEXTURE,
+	TOCLIENT_SPAWN_PARTICLE_COLLISION_REMOVAL,
+};
 	/*
 		v3f1000 pos
 		v3f1000 velocity
@@ -479,7 +657,25 @@
 		u8 collision_removal
 	*/
 
-	TOCLIENT_ADD_PARTICLESPAWNER = 0x47,
+#define TOCLIENT_ADD_PARTICLESPAWNER 0x47
+enum {
+	TOCLIENT_ADD_PARTICLESPAWNER_AMOUNT,
+	TOCLIENT_ADD_PARTICLESPAWNER_SPAWNTIME,
+	TOCLIENT_ADD_PARTICLESPAWNER_MINPOS,
+	TOCLIENT_ADD_PARTICLESPAWNER_MAXPOS,
+	TOCLIENT_ADD_PARTICLESPAWNER_MINVEL,
+	TOCLIENT_ADD_PARTICLESPAWNER_MAXVEL,
+	TOCLIENT_ADD_PARTICLESPAWNER_MINACC,
+	TOCLIENT_ADD_PARTICLESPAWNER_MAXACC,
+	TOCLIENT_ADD_PARTICLESPAWNER_MINEXPTIME,
+	TOCLIENT_ADD_PARTICLESPAWNER_MAXEXPTIME,
+	TOCLIENT_ADD_PARTICLESPAWNER_MINSIZE,
+	TOCLIENT_ADD_PARTICLESPAWNER_MAXSIZE,
+	TOCLIENT_ADD_PARTICLESPAWNER_COLLISIONDETECTION,
+	TOCLIENT_ADD_PARTICLESPAWNER_VERTICAL,
+	TOCLIENT_ADD_PARTICLESPAWNER_TEXTURE,
+	TOCLIENT_ADD_PARTICLESPAWNER_ID
+};
 	/*
 		u16 amount
 		f1000 spawntime
@@ -501,12 +697,31 @@
 		u8 collision_removal
 	*/
 
-	TOCLIENT_DELETE_PARTICLESPAWNER_LEGACY = 0x48,
+#define TOCLIENT_DELETE_PARTICLESPAWNER_LEGACY 0x48
+#define TOCLIENT_DELETE_PARTICLESPAWNER 0x48
+enum {
+	TOCLIENT_DELETE_PARTICLESPAWNER_ID
+};
 	/*
 		u16 id
 	*/
 
-	TOCLIENT_HUDADD = 0x49,
+#define TOCLIENT_HUDADD 0x49
+enum {
+	TOCLIENT_HUDADD_ID,
+	TOCLIENT_HUDADD_TYPE,
+	TOCLIENT_HUDADD_POS,
+	TOCLIENT_HUDADD_NAME,
+	TOCLIENT_HUDADD_SCALE,
+	TOCLIENT_HUDADD_TEXT,
+	TOCLIENT_HUDADD_NUMBER,
+	TOCLIENT_HUDADD_ITEM,
+	TOCLIENT_HUDADD_DIR,
+	TOCLIENT_HUDADD_ALIGN,
+	TOCLIENT_HUDADD_OFFSET,
+	TOCLIENT_HUDADD_WORLD_POS,
+	TOCLIENT_HUDADD_SIZE,
+};
 	/*
 		u32 id
 		u8 type
@@ -525,12 +740,24 @@
 		v2s32 size
 	*/
 
-	TOCLIENT_HUDRM = 0x4a,
+#define TOCLIENT_HUDRM 0x4a
+enum {
+	TOCLIENT_HUDRM_ID
+};
 	/*
 		u32 id
 	*/
 
-	TOCLIENT_HUDCHANGE = 0x4b,
+#define TOCLIENT_HUDCHANGE 0x4b
+enum {
+	TOCLIENT_HUDCHANGE_ID,
+	TOCLIENT_HUDCHANGE_STAT,
+	TOCLIENT_HUDCHANGE_V2F,
+	TOCLIENT_HUDCHANGE_V3F,
+	TOCLIENT_HUDCHANGE_STRING,
+	TOCLIENT_HUDCHANGE_U32,
+	TOCLIENT_HUDCHANGE_V2S32
+};
 	/*
 		u32 id
 		u8 stat
@@ -540,25 +767,42 @@
 		 u32 data]
 	*/
 
-	TOCLIENT_HUD_SET_FLAGS = 0x4c,
+#define TOCLIENT_HUD_SET_FLAGS 0x4c
+enum {
+	TOCLIENT_HUD_SET_FLAGS_FLAGS,
+	TOCLIENT_HUD_SET_FLAGS_MASK
+};
 	/*
 		u32 flags
 		u32 mask
 	*/
 
-	TOCLIENT_HUD_SET_PARAM = 0x4d,
+#define TOCLIENT_HUD_SET_PARAM 0x4d
+enum {
+	TOCLIENT_HUD_SET_PARAM_ID,
+	TOCLIENT_HUD_SET_PARAM_VALUE
+};
 	/*
 		u16 param
 		u16 len
 		u8[len] value
 	*/
 
-	TOCLIENT_BREATH = 0x4e,
+#define TOCLIENT_BREATH 0x4e
+enum {
+	// u16 breath
+	TOCLIENT_BREATH_BREATH
+};
 	/*
 		u16 breath
 	*/
 
-	TOCLIENT_SET_SKY = 0x4f,
+#define TOCLIENT_SET_SKY 0x4f
+enum {
+	TOCLIENT_SET_SKY_COLOR,
+	TOCLIENT_SET_SKY_TYPE,
+	TOCLIENT_SET_SKY_PARAMS
+};
 	/*
 		u8[4] color (ARGB)
 		u8 len
@@ -569,13 +813,24 @@
 			u8[len] param
 	*/
 
-	TOCLIENT_OVERRIDE_DAY_NIGHT_RATIO = 0x50,
+#define TOCLIENT_OVERRIDE_DAY_NIGHT_RATIO 0x50
+enum {
+	TOCLIENT_OVERRIDE_DAY_NIGHT_RATIO_DO,
+	TOCLIENT_OVERRIDE_DAY_NIGHT_RATIO_VALUE
+};
 	/*
 		u8 do_override (boolean)
 		u16 day-night ratio 0...65535
 	*/
 
-	TOCLIENT_LOCAL_PLAYER_ANIMATIONS = 0x51,
+#define TOCLIENT_LOCAL_PLAYER_ANIMATIONS  0x51
+enum {
+	TOCLIENT_LOCAL_PLAYER_ANIMATIONS_IDLE,
+	TOCLIENT_LOCAL_PLAYER_ANIMATIONS_WALK,
+	TOCLIENT_LOCAL_PLAYER_ANIMATIONS_DIG,
+	TOCLIENT_LOCAL_PLAYER_ANIMATIONS_WALKDIG,
+	TOCLIENT_LOCAL_PLAYER_ANIMATIONS_FRAME_SPEED
+};
 	/*
 		v2s32 stand/idle
 		v2s32 walk
@@ -584,18 +839,25 @@
 		f1000 frame_speed
 	*/
 
-	TOCLIENT_EYE_OFFSET = 0x52,
+
+#define TOCLIENT_EYE_OFFSET 0x52
+enum {
+	TOCLIENT_EYE_OFFSET_FIRST,
+	TOCLIENT_EYE_OFFSET_THIRD
+};
 	/*
 		v3f1000 first
 		v3f1000 third
 	*/
 
-	TOCLIENT_DELETE_PARTICLESPAWNER = 0x53,
+// minetest wtf
+//	TOCLIENT_DELETE_PARTICLESPAWNER = 0x53,
 	/*
 		u32 id
 	*/
 
-	TOCLIENT_SRP_BYTES_S_B = 0x60,
+
+#define TOCLIENT_SRP_BYTES_S_B 0x60
 	/*
 		Belonging to AUTH_MECHANISM_LEGACY_PASSWORD and AUTH_MECHANISM_SRP.
 
@@ -603,12 +865,18 @@
 		std::string bytes_B
 	*/
 
-	TOCLIENT_NUM_MSG_TYPES = 0x61,
+#define TOCLIENT_NUM_MSG_TYPES 0x61
+
+/*
 };
+*/
 
+// TOSERVER_* commands
 enum ToServerCommand
 {
-	TOSERVER_INIT = 0x02,
+};
+
+#define TOSERVER_INIT 0x02
 	/*
 		Sent first after connected.
 
@@ -619,7 +887,25 @@
 		std::string player name
 	*/
 
-	TOSERVER_INIT_LEGACY = 0x10,
+enum {
+	TOSERVER_INIT_FMT,
+	TOSERVER_INIT_COMPRESSION,
+	TOSERVER_INIT_PROTOCOL_VERSION_MIN,
+	TOSERVER_INIT_PROTOCOL_VERSION_MAX,
+	TOSERVER_INIT_NAME
+};
+
+
+#define TOSERVER_INIT_LEGACY 0x10
+enum {
+	// u8 SER_FMT_VER_HIGHEST_READ
+	TOSERVER_INIT_LEGACY_FMT,
+	TOSERVER_INIT_LEGACY_NAME,
+	TOSERVER_INIT_LEGACY_PASSWORD,
+	TOSERVER_INIT_LEGACY_PROTOCOL_VERSION_MIN,
+	TOSERVER_INIT_LEGACY_PROTOCOL_VERSION_MAX,
+	TOSERVER_INIT_LEGACY_PROTOCOL_VERSION_FM
+};
 	/*
 		Sent first after connected.
 
@@ -631,7 +917,8 @@
 		[53] u16 maximum supported network protocol version (added later than the previous one)
 	*/
 
-	TOSERVER_INIT2 = 0x11,
+
+#define TOSERVER_INIT2 0x11
 	/*
 		Sent as an ACK for TOCLIENT_INIT.
 		After this, the server can send data.
@@ -639,11 +926,19 @@
 		[0] u16 TOSERVER_INIT2
 	*/
 
-	TOSERVER_GETBLOCK=0x20, // Obsolete
-	TOSERVER_ADDNODE = 0x21, // Obsolete
-	TOSERVER_REMOVENODE = 0x22, // Obsolete
-
-	TOSERVER_PLAYERPOS = 0x23,
+#define TOSERVER_PLAYERPOS 0x23
+enum {
+	// v3f
+	TOSERVER_PLAYERPOS_POSITION,
+	// v3f
+	TOSERVER_PLAYERPOS_SPEED,
+	// f32
+	TOSERVER_PLAYERPOS_PITCH,
+	// f32
+	TOSERVER_PLAYERPOS_YAW,
+	// u32
+	TOSERVER_PLAYERPOS_KEY_PRESSED
+};
 	/*
 		[0] u16 command
 		[2] v3s32 position*100
@@ -653,16 +948,21 @@
 		[2+12+12+4+4] u32 keyPressed
 	*/
 
-	TOSERVER_GOTBLOCKS = 0x24,
+#define TOSERVER_GOTBLOCKS 0x24 // mt compat only
+
 	/*
 		[0] u16 command
 		[2] u8 count
 		[3] v3s16 pos_0
 		[3+6] v3s16 pos_1
+		[9] u16 wanted range
 		...
 	*/
 
-	TOSERVER_DELETEDBLOCKS = 0x25,
+#define TOSERVER_DELETEDBLOCKS 0x25
+enum {
+	TOSERVER_DELETEDBLOCKS_DATA
+};
 	/*
 		[0] u16 command
 		[2] u8 count
@@ -671,14 +971,19 @@
 		...
 	*/
 
+
+	/*
 	TOSERVER_ADDNODE_FROM_INVENTORY = 0x26, // Obsolete
+	*/
 	/*
 		[0] u16 command
 		[2] v3s16 pos
 		[8] u16 i
 	*/
 
+	/*
 	TOSERVER_CLICK_OBJECT = 0x27, // Obsolete
+	*/
 	/*
 		length: 13
 		[0] u16 command
@@ -688,7 +993,9 @@
 		[11] u16 item
 	*/
 
+	/*
 	TOSERVER_GROUND_ACTION = 0x28, // Obsolete
+	*/
 	/*
 		length: 17
 		[0] u16 command
@@ -703,11 +1010,14 @@
 		3: digging completed
 	*/
 
+	/*
 	TOSERVER_RELEASE = 0x29, // Obsolete
-
+	*/
 	// (oops, there is some gap here)
 
+	/*
 	TOSERVER_SIGNTEXT = 0x30, // Old signs, obsolete
+	*/
 	/*
 		v3s16 blockpos
 		s16 id
@@ -715,25 +1025,37 @@
 		textdata
 	*/
 
-	TOSERVER_INVENTORY_ACTION = 0x31,
+#define TOSERVER_INVENTORY_ACTION 0x31
+
 	/*
 		See InventoryAction in inventorymanager.h
 	*/
+enum {
+	TOSERVER_INVENTORY_ACTION_DATA
+};
 
-	TOSERVER_CHAT_MESSAGE = 0x32,
+
+#define TOSERVER_CHAT_MESSAGE 0x32
+enum {
+	TOSERVER_CHAT_MESSAGE_DATA
+};
 	/*
 		u16 length
 		wstring message
 	*/
 
+	/*
 	TOSERVER_SIGNNODETEXT = 0x33, // obsolete
+	*/
 	/*
 		v3s16 p
 		u16 textlen
 		textdata
 	*/
 
+	/*
 	TOSERVER_CLICK_ACTIVEOBJECT = 0x34, // Obsolete
+	*/
 	/*
 		length: 7
 		[0] u16 command
@@ -742,12 +1064,21 @@
 		[5] u16 item
 	*/
 
-	TOSERVER_DAMAGE = 0x35,
+#define TOSERVER_DAMAGE 0x35
+enum {
+	TOSERVER_DAMAGE_VALUE
+};
+
 	/*
 		u8 amount
 	*/
 
-	TOSERVER_PASSWORD_LEGACY = 0x36,
+#define TOSERVER_PASSWORD_LEGACY 0x36
+#define TOSERVER_CHANGE_PASSWORD 0x36
+enum {
+	TOSERVER_CHANGE_PASSWORD_OLD,
+	TOSERVER_CHANGE_PASSWORD_NEW
+};
 	/*
 		Sent to change password.
 
@@ -756,7 +1087,10 @@
 		[30] u8[28] new password
 	*/
 
-	TOSERVER_PLAYERITEM = 0x37,
+#define TOSERVER_PLAYERITEM 0x37
+enum {
+	TOSERVER_PLAYERITEM_VALUE
+};
 	/*
 		Sent to change selected item.
 
@@ -764,35 +1098,26 @@
 		[2] u16 item
 	*/
 
-	TOSERVER_RESPAWN = 0x38,
+#define TOSERVER_RESPAWN 0x38
 	/*
 		u16 TOSERVER_RESPAWN
 	*/
 
-	TOSERVER_INTERACT = 0x39,
-	/*
-		[0] u16 command
-		[2] u8 action
-		[3] u16 item
-		[5] u32 length of the next item
-		[9] serialized PointedThing
-		actions:
-		0: start digging (from undersurface) or use
-		1: stop digging (all parameters ignored)
-		2: digging completed
-		3: place block or item (to abovesurface)
-		4: use item
-
-		(Obsoletes TOSERVER_GROUND_ACTION and TOSERVER_CLICK_ACTIVEOBJECT.)
-	*/
-
-	TOSERVER_REMOVED_SOUNDS = 0x3a,
+#define TOSERVER_REMOVED_SOUNDS 0x3a
+enum {
+	TOSERVER_REMOVED_SOUNDS_IDS
+};
 	/*
 		u16 len
 		s32[len] sound_id
 	*/
 
-	TOSERVER_NODEMETA_FIELDS = 0x3b,
+#define TOSERVER_NODEMETA_FIELDS 0x3b
+enum {
+	TOSERVER_NODEMETA_FIELDS_POS,
+	TOSERVER_NODEMETA_FIELDS_FORMNAME,
+	TOSERVER_NODEMETA_FIELDS_DATA
+};
 	/*
 		v3s16 p
 		u16 len
@@ -805,7 +1130,20 @@
 			u8[len] field value
 	*/
 
-	TOSERVER_INVENTORY_FIELDS = 0x3c,
+#define TOSERVER_PASSWORD 0x3d
+	/*
+		Sent to change password.
+
+		[0] u16 TOSERVER_PASSWORD
+		[2] std::string old password
+		[2+*] std::string new password
+	*/
+
+#define TOSERVER_INVENTORY_FIELDS 0x3c
+enum {
+	TOSERVER_INVENTORY_FIELDS_FORMNAME,
+	TOSERVER_INVENTORY_FIELDS_DATA
+};
 	/*
 		u16 len
 		u8[len] form name (reserved for future use)
@@ -817,7 +1155,10 @@
 			u8[len] field value
 	*/
 
-	TOSERVER_REQUEST_MEDIA = 0x40,
+#define TOSERVER_REQUEST_MEDIA 0x40
+enum {
+	TOSERVER_REQUEST_MEDIA_FILES
+};
 	/*
 		u16 number of files requested
 		for each file {
@@ -826,27 +1167,54 @@
 		}
 	 */
 
-	TOSERVER_RECEIVED_MEDIA = 0x41,
+#define TOSERVER_RECEIVED_MEDIA 0x41
 	/*
 		<no payload data>
 	*/
 
-	TOSERVER_BREATH = 0x42,
+#define TOSERVER_BREATH 0x42
+enum {
+	TOSERVER_BREATH_VALUE
+};
 	/*
 		u16 breath
 	*/
 
-	TOSERVER_CLIENT_READY = 0x43,
+#define TOSERVER_INTERACT 0x39
+enum {
 	/*
-		u8 major
-		u8 minor
-		u8 patch
-		u8 reserved
-		u16 len
-		u8[len] full_version_string
+		actions:
+		0: start digging (from undersurface) or use
+		1: stop digging (all parameters ignored)
+		2: digging completed
+		3: place block or item (to abovesurface)
+		4: use item
 	*/
+	TOSERVER_INTERACT_ACTION,
+	TOSERVER_INTERACT_ITEM,
+	TOSERVER_INTERACT_POINTED_THING
+};
+
+#define TOSERVER_CLIENT_READY 0x43
+enum {
+	TOSERVER_CLIENT_READY_VERSION_MAJOR,
+	TOSERVER_CLIENT_READY_VERSION_MINOR,
+	TOSERVER_CLIENT_READY_VERSION_PATCH,
+	TOSERVER_CLIENT_READY_VERSION_STRING,
+	TOSERVER_CLIENT_READY_VERSION_TWEAK
+};
 
-	TOSERVER_FIRST_SRP = 0x50,
+// freeminer only packet
+#define TOSERVER_DRAWCONTROL 0x44
+enum {
+	TOSERVER_DRAWCONTROL_WANTED_RANGE,
+	TOSERVER_DRAWCONTROL_RANGE_ALL,
+	TOSERVER_DRAWCONTROL_FARMESH,
+	TOSERVER_DRAWCONTROL_FOV,
+	TOSERVER_DRAWCONTROL_BLOCK_OVERFLOW //not used
+};
+
+#define TOSERVER_FIRST_SRP 0x50
 	/*
 		Belonging to AUTH_MECHANISM_FIRST_SRP.
 
@@ -855,7 +1223,7 @@
 		u8 is_empty (=1 if password is empty, 0 otherwise)
 	*/
 
-	TOSERVER_SRP_BYTES_A = 0x51,
+#define TOSERVER_SRP_BYTES_A 0x51
 	/*
 		Belonging to AUTH_MECHANISM_LEGACY_PASSWORD and AUTH_MECHANISM_SRP,
 			depending on current_login_based_on.
@@ -866,15 +1234,18 @@
 		                            or 1 directly the password)
 	*/
 
-	TOSERVER_SRP_BYTES_M = 0x52,
+#define TOSERVER_SRP_BYTES_M 0x52
 	/*
 		Belonging to AUTH_MECHANISM_LEGACY_PASSWORD and AUTH_MECHANISM_SRP.
 
 		std::string bytes_M
 	*/
 
-	TOSERVER_NUM_MSG_TYPES = 0x53,
+#define TOSERVER_NUM_MSG_TYPES 0x53
+
+/*
 };
+*/
 
 enum AuthMechanism
 {
