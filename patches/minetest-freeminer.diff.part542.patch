diff -ruN minetest-master/src/tool.cpp minetest-freeminer/src/tool.cpp
--- minetest-master/src/tool.cpp	2016-09-03 16:15:52.501778000 -0700
+++ minetest-freeminer/src/tool.cpp	2016-09-03 15:43:59.870740000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+tool.cpp
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "tool.h"
@@ -91,6 +94,24 @@
 	}
 }
 
+void ToolCapabilities::msgpack_pack(msgpack::packer<msgpack::sbuffer> &pk) const
+{
+	pk.pack_map(4);
+	PACK(TOOLCAP_FULL_PUNCH_INTERVAL, full_punch_interval);
+	PACK(TOOLCAP_MAX_DROP_LEVEL, max_drop_level);
+	PACK(TOOLCAP_GROUPCAPS, groupcaps);
+	PACK(TOOLCAP_DAMAGEGROUPS, damageGroups);
+}
+
+void ToolCapabilities::msgpack_unpack(msgpack::object o)
+{
+	MsgpackPacket packet = o.as<MsgpackPacket>();
+	packet[TOOLCAP_FULL_PUNCH_INTERVAL].convert(full_punch_interval);
+	packet[TOOLCAP_MAX_DROP_LEVEL].convert(max_drop_level);
+	packet[TOOLCAP_GROUPCAPS].convert(groupcaps);
+	packet[TOOLCAP_DAMAGEGROUPS].convert(damageGroups);
+}
+
 DigParams getDigParams(const ItemGroupList &groups,
 		const ToolCapabilities *tp, float time_from_last_punch)
 {
