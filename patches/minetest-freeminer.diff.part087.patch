diff -ruN minetest-master/builtin/game/item_entity.lua minetest-freeminer/builtin/game/item_entity.lua
--- minetest-master/builtin/game/item_entity.lua	2016-09-03 16:15:52.561779000 -0700
+++ minetest-freeminer/builtin/game/item_entity.lua	2016-09-03 15:43:59.654739000 -0700
@@ -16,7 +16,8 @@
 
 local time_to_live = tonumber(core.setting_get("item_entity_ttl"))
 if not time_to_live then
-	time_to_live = 900
+	--time_to_live = -1
+	time_to_live = 86400
 end
 
 core.register_entity(":__builtin:item", {
@@ -75,6 +76,7 @@
 			itemstring = self.itemstring,
 			always_collect = self.always_collect,
 			age = self.age,
+			ttl = self.ttl,
 			dropped_by = self.dropped_by
 		})
 	end,
@@ -91,6 +93,7 @@
 					self.age = dtime_s
 				end
 				self.dropped_by = data.dropped_by
+				self.ttl = data.ttl
 			end
 		else
 			self.itemstring = staticdata
@@ -153,12 +156,15 @@
 
 	on_step = function(self, dtime)
 		self.age = self.age + dtime
-		if time_to_live > 0 and self.age > time_to_live then
+		local ttl = self.object:get_luaentity().ttl
+		if not ttl then ttl = time_to_live end
+		if ttl > 0 and self.age > ttl then
 			self.itemstring = ''
 			self.object:remove()
 			return
 		end
 		local p = self.object:getpos()
+		local node_in = core.get_node_or_nil(p)
 		p.y = p.y - 0.5
 		local node = core.get_node_or_nil(p)
 		local in_unloaded = (node == nil)
@@ -173,7 +179,7 @@
 		local nn = node.name
 		-- If node is not registered or node is walkably solid and resting on nodebox
 		local v = self.object:getvelocity()
-		if not core.registered_nodes[nn] or core.registered_nodes[nn].walkable and v.y == 0 then
+		if not core.registered_nodes[nn] or (core.registered_nodes[nn].walkable and core.get_item_group(nn, "slippery")==0) and v.y == 0 then
 			if self.physical_state then
 				local own_stack = ItemStack(self.object:get_luaentity().itemstring)
 				-- Merge with close entities of the same item
@@ -197,8 +203,25 @@
 				self.object:setacceleration({x = 0, y = -10, z = 0})
 				self.physical_state = true
 				self.object:set_properties({physical = true})
+			elseif core.get_item_group(nn, "slippery") ~= 0 then
+				if math.abs(v.x) < .2 and math.abs(v.z) < .2 then
+					self.object:setvelocity({x=0,y=0,z=0})
+					self.object:setacceleration({x=0, y=0, z=0})
+					self.physical_state = false
+					self.object:set_properties({
+						physical = false
+					})
+				else
+					self.object:setacceleration({x=-v.x, y=-10, z=-v.z})
+				end
 			end
 		end
+
+		-- push item up from ground
+		if node_in and ( not core.registered_nodes[node_in.name] or (not core.registered_nodes[node_in.name].buildable_to and not core.registered_nodes[node_in.name].sunlight_propagates ) ) then
+			self.object:setvelocity({x=0,y=2,z=0})
+		end
+
 	end,
 
 	on_punch = function(self, hitter)
