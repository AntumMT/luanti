diff -ruN minetest-master/src/threads.h minetest-freeminer/src/threads.h
--- minetest-master/src/threads.h	2016-09-03 16:15:52.593779000 -0700
+++ minetest-freeminer/src/threads.h	2016-09-03 15:43:59.750740000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+threads.h
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef THREADS_HEADER
@@ -25,7 +28,7 @@
 //
 #if __cplusplus >= 201103L
 	#define USE_CPP11_THREADS 1
-#elif defined(_WIN32)
+#elif defined(_WIN32) || defined(WIN32)
 	#define USE_WIN_THREADS 1
 #else
 	#define USE_POSIX_THREADS 1
@@ -44,7 +47,8 @@
 // threadid_t, threadhandle_t
 //
 #if USE_CPP11_THREADS
-	typedef std::thread::id threadid_t;
+	//typedef std::thread::id threadid_t;
+	typedef std::size_t threadid_t;
 	typedef std::thread::native_handle_type threadhandle_t;
 #elif USE_WIN_THREADS
 	typedef DWORD threadid_t;
@@ -61,7 +65,7 @@
 	typedef void *ThreadStartFunc(void *param);
 #elif defined(_WIN32_WCE)
 	typedef DWORD ThreadStartFunc(LPVOID param);
-#elif defined(_WIN32)
+#elif defined(_WIN32) || defined(WIN32)
 	typedef DWORD WINAPI ThreadStartFunc(LPVOID param);
 #endif
 
@@ -69,7 +73,10 @@
 inline threadid_t thr_get_current_thread_id()
 {
 #if USE_CPP11_THREADS
+	return std::hash<std::thread::id>()(std::this_thread::get_id());
+/*
 	return std::this_thread::get_id();
+*/
 #elif USE_WIN_THREADS
 	return GetCurrentThreadId();
 #elif USE_POSIX_THREADS
@@ -77,6 +84,7 @@
 #endif
 }
 
+
 inline bool thr_compare_thread_id(threadid_t thr1, threadid_t thr2)
 {
 #if USE_POSIX_THREADS
