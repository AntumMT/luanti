diff -ruN minetest-master/src/script/lua_api/l_env.h minetest-freeminer/src/script/lua_api/l_env.h
--- minetest-master/src/script/lua_api/l_env.h	2016-09-03 16:15:52.633779000 -0700
+++ minetest-freeminer/src/script/lua_api/l_env.h	2016-09-03 15:43:59.962741000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+script/lua_api/l_env.h
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef L_ENV_H_
@@ -80,6 +83,9 @@
 	// pos = {x=num, y=num, z=num}
 	static int l_add_node_level(lua_State *L);
 
+	// freeze_melt(pos)
+	static int l_freeze_melt(lua_State *L);
+
 	// find_nodes_with_meta(pos1, pos2)
 	static int l_find_nodes_with_meta(lua_State *L);
 
@@ -163,6 +169,12 @@
 	// transforming_liquid_add(pos)
 	static int l_transforming_liquid_add(lua_State *L);
 
+	static int l_get_heat(lua_State *L);
+	static int l_get_humidity(lua_State *L);
+	
+	// freeminer.get_surface(basepos,yoffset,walkable_only=false)
+	static int l_get_surface(lua_State *L);
+
 	// forceload_block(blockpos)
 	// forceloads a block
 	static int l_forceload_block(lua_State *L);
@@ -171,6 +183,17 @@
 	// stops forceloading a position
 	static int l_forceload_free_block(lua_State *L);
 
+	/* Epixel contrib */
+/*
+	static int l_add_creature(lua_State *L);
+*/
+	static int l_spawn_item_activeobject(lua_State *L);
+	static int l_spawn_falling_node(lua_State *L);
+	static int l_nodeupdate(lua_State *L);
+/*
+	static int l_make_explosion(lua_State *L);
+*/
+
 public:
 	static void Initialize(lua_State *L, int top);
 
@@ -183,6 +206,7 @@
 
 	std::set<std::string> m_trigger_contents;
 	std::set<std::string> m_required_neighbors;
+	u32 m_neighbors_range;
 	float m_trigger_interval;
 	u32 m_trigger_chance;
 	bool m_simple_catch_up;
@@ -190,10 +214,12 @@
 	LuaABM(lua_State *L, int id,
 			const std::set<std::string> &trigger_contents,
 			const std::set<std::string> &required_neighbors,
+			int neighbors_range,
 			float trigger_interval, u32 trigger_chance, bool simple_catch_up):
 		m_id(id),
 		m_trigger_contents(trigger_contents),
 		m_required_neighbors(required_neighbors),
+		m_neighbors_range(neighbors_range),
 		m_trigger_interval(trigger_interval),
 		m_trigger_chance(trigger_chance),
 		m_simple_catch_up(simple_catch_up)
@@ -203,10 +229,14 @@
 	{
 		return m_trigger_contents;
 	}
-	virtual std::set<std::string> getRequiredNeighbors()
+	virtual std::set<std::string> getRequiredNeighbors(bool activate)
 	{
 		return m_required_neighbors;
 	}
+	virtual u32 getNeighborsRange()
+	{
+		return m_neighbors_range;
+	}
 	virtual float getTriggerInterval()
 	{
 		return m_trigger_interval;
@@ -220,7 +250,7 @@
 		return m_simple_catch_up;
 	}
 	virtual void trigger(ServerEnvironment *env, v3s16 p, MapNode n,
-			u32 active_object_count, u32 active_object_count_wider);
+			u32 active_object_count, u32 active_object_count_wider, MapNode neighbor, bool activate);
 };
 
 class LuaLBM : public LoadingBlockModifierDef
