diff -ruN minetest-master/src/script/common/c_converter.cpp minetest-freeminer/src/script/common/c_converter.cpp
--- minetest-master/src/script/common/c_converter.cpp	2016-09-03 16:15:52.717779000 -0700
+++ minetest-freeminer/src/script/common/c_converter.cpp	2016-09-03 15:43:59.834740000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+script/common/c_converter.cpp
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 extern "C" {
@@ -554,6 +557,40 @@
 }
 
 
+v2s16 read_v2POS(lua_State *L, int index) {
+	v2POS p;
+	luaL_checktype(L, index, LUA_TTABLE);
+	lua_getfield(L, index, "x");
+	p.X = lua_tonumber(L, -1);
+	lua_pop(L, 1);
+	lua_getfield(L, index, "y");
+	p.Y = lua_tonumber(L, -1);
+	lua_pop(L, 1);
+	return p;
+}
+
+void push_v3POS(lua_State *L, v3POS p) {
+	lua_newtable(L);
+	lua_pushnumber(L, p.X);
+	lua_setfield(L, -2, "x");
+	lua_pushnumber(L, p.Y);
+	lua_setfield(L, -2, "y");
+	lua_pushnumber(L, p.Z);
+	lua_setfield(L, -2, "z");
+}
+
+v3POS read_v3POS(lua_State *L, int index) {
+	// Correct rounding at <0
+	v3f pf = read_v3f(L, index);
+	return floatToInt(pf, 1.0);
+}
+
+v3POS check_v3POS(lua_State *L, int index) {
+	// Correct rounding at <0
+	v3f pf = check_v3f(L, index);
+	return floatToInt(pf, 1.0);
+}
+
 ////
 //// Array table slices
 ////
