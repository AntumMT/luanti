diff -ruN minetest-master/src/mapgen_v5.cpp minetest-freeminer/src/mapgen_v5.cpp
--- minetest-master/src/mapgen_v5.cpp	2016-09-03 16:15:52.633779000 -0700
+++ minetest-freeminer/src/mapgen_v5.cpp	2016-09-03 15:43:59.962741000 -0700
@@ -47,6 +47,7 @@
 
 MapgenV5::MapgenV5(int mapgenid, MapgenV5Params *params, EmergeManager *emerge)
 	: MapgenBasic(mapgenid, params, emerge)
+	, Mapgen_features(mapgenid, params, emerge)
 {
 	this->spflags    = params->spflags;
 	this->cave_width = params->cave_width;
@@ -60,6 +61,19 @@
 	// 1-up 1-down overgeneration
 	noise_ground = new Noise(&params->np_ground, seed, csize.X, csize.Y + 2, csize.Z);
 
+	//freeminer:
+	y_offset = 1;
+	float_islands = params->float_islands;
+	noise_float_islands1  = new Noise(&params->np_float_islands1, seed, csize.X, csize.Y + y_offset * 2, csize.Z);
+	noise_float_islands2  = new Noise(&params->np_float_islands2, seed, csize.X, csize.Y + y_offset * 2, csize.Z);
+	noise_float_islands3  = new Noise(&params->np_float_islands3, seed, csize.X, csize.Z);
+
+	noise_layers          = new Noise(&params->np_layers,         seed, csize.X, csize.Y + y_offset * 2, csize.Z);
+	layers_init(emerge, params->paramsj);
+
+	//noise_cave_indev      = new Noise(&sp->np_cave_indev,     seed, csize.X, csize.Y + y_offset * 2, csize.Z);
+	//=========
+
 	MapgenBasic::np_cave1 = params->np_cave1;
 	MapgenBasic::np_cave2 = params->np_cave2;
 }
@@ -85,6 +99,13 @@
 	np_cave1        = NoiseParams(0, 12, v3f(50,  50,  50),  52534,  4, 0.5,  2.0);
 	np_cave2        = NoiseParams(0, 12, v3f(50,  50,  50),  10325,  4, 0.5,  2.0);
 	np_ground       = NoiseParams(0, 40, v3f(80,  80,  80),  983240, 4, 0.55, 2.0, NOISE_FLAG_EASED);
+
+	//freeminer:
+	float_islands = 500;
+	np_float_islands1  = NoiseParams(0,    1,   v3f(256, 256, 256), 3683, 6, 0.6, 2.0, NOISE_FLAG_DEFAULTS, 1, 1.5);
+	np_float_islands2  = NoiseParams(0,    1,   v3f(8,   8,   8  ), 9292, 2, 0.5, 2.0, NOISE_FLAG_DEFAULTS, 1, 1.5);
+	np_float_islands3  = NoiseParams(0,    1,   v3f(256, 256, 256), 6412, 2, 0.5, 2.0, NOISE_FLAG_DEFAULTS, 1, 0.5);
+	np_layers          = NoiseParams(500,  500, v3f(100, 100, 100), 3663, 5, 0.6, 2.0, NOISE_FLAG_DEFAULTS, 1, 1.1,   0.5);
 }
 
 
@@ -92,7 +113,7 @@
 //#define CAVE_NOISE_THRESHOLD (1.5/CAVE_NOISE_SCALE) = 0.125
 
 
-void MapgenV5Params::readParams(const Settings *settings)
+void MapgenV5Params::readParams(Settings *settings)
 {
 	settings->getFlagStrNoEx("mgv5_spflags",  spflags, flagdesc_mapgen_v5);
 	settings->getFloatNoEx("mgv5_cave_width", cave_width);
@@ -103,6 +124,14 @@
 	settings->getNoiseParams("mgv5_np_cave1",        np_cave1);
 	settings->getNoiseParams("mgv5_np_cave2",        np_cave2);
 	settings->getNoiseParams("mgv5_np_ground",       np_ground);
+
+	//freeminer:
+	settings->getS16NoEx("mg_float_islands", float_islands);
+	settings->getNoiseParamsFromGroup("mg_np_float_islands1", np_float_islands1);
+	settings->getNoiseParamsFromGroup("mg_np_float_islands2", np_float_islands2);
+	settings->getNoiseParamsFromGroup("mg_np_float_islands3", np_float_islands3);
+	settings->getNoiseParamsFromGroup("mg_np_layers",         np_layers);
+	paramsj = settings->getJson("mg_params", paramsj);
 }
 
 
@@ -117,6 +146,14 @@
 	settings->setNoiseParams("mgv5_np_cave1",        np_cave1);
 	settings->setNoiseParams("mgv5_np_cave2",        np_cave2);
 	settings->setNoiseParams("mgv5_np_ground",       np_ground);
+
+	//freeminer:
+	settings->setS16("mg_float_islands", float_islands);
+	settings->setNoiseParams("mg_np_float_islands1", np_float_islands1);
+	settings->setNoiseParams("mg_np_float_islands2", np_float_islands2);
+	settings->setNoiseParams("mg_np_float_islands3", np_float_islands3);
+	settings->setNoiseParams("mg_np_layers",         np_layers);
+	settings->setJson("mg_params", paramsj);
 }
 
 
@@ -180,6 +217,15 @@
 	// Create a block-specific seed
 	blockseed = getBlockSeed2(full_node_min, seed);
 
+
+	//freeminer:
+	if (float_islands && node_max.Y >= float_islands) {
+		float_islands_prepare(node_min, node_max, float_islands);
+	}
+
+	layers_prepare(node_min, node_max);
+	//==========
+
 	// Generate base terrain
 	s16 stone_surface_max_y = generateBaseTerrain();
 
@@ -211,7 +257,7 @@
 	//printf("makeChunk: %dms\n", t.stop());
 
 	// Add top and bottom side of water to transforming_liquid queue
-	updateLiquid(&data->transforming_liquid, full_node_min, full_node_max);
+	updateLiquid(full_node_min, full_node_max);
 
 	// Calculate lighting
 	if (flags & MG_LIGHT) {
@@ -265,12 +311,15 @@
 				float h = noise_height->result[index2d];
 
 				if (noise_ground->result[index] * f < y - h) {
-					if (y <= water_level)
+					if (y <= water_level) {
 						vm->m_data[vi] = MapNode(c_water_source);
+					if (liquid_pressure && y <= 0)
+						vm->m_data[vi].addLevel(m_emerge->ndef, water_level - y, 1);
+					}
 					else
 						vm->m_data[vi] = MapNode(CONTENT_AIR);
 				} else {
-					vm->m_data[vi] = MapNode(c_stone);
+					vm->m_data[vi] = layers_get(index);
 					if (y > stone_surface_max_y)
 						stone_surface_max_y = y;
 				}
