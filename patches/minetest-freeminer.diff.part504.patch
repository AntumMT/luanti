diff -ruN minetest-master/src/serverobject.cpp minetest-freeminer/src/serverobject.cpp
--- minetest-master/src/serverobject.cpp	2016-09-03 16:15:52.437778000 -0700
+++ minetest-freeminer/src/serverobject.cpp	2016-09-03 15:43:59.838740000 -0700
@@ -1,37 +1,45 @@
 /*
-Minetest
+serverobject.cpp
 Copyright (C) 2010-2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "serverobject.h"
 #include <fstream>
 #include "inventory.h"
 #include "constants.h" // BS
+#include "environment.h"
+
+Queue<ActiveObjectMessage> dummy_queue;
 
 ServerActiveObject::ServerActiveObject(ServerEnvironment *env, v3f pos):
 	ActiveObject(0),
-	m_known_by_count(0),
-	m_removed(false),
-	m_pending_deactivation(false),
-	m_static_exists(false),
 	m_static_block(1337,1337,1337),
+	m_messages_out(env ? env->m_active_object_messages : dummy_queue),
+	m_uptime_last(0),
 	m_env(env),
 	m_base_position(pos)
 {
+	m_pending_deactivation = false;
+	m_removed = false;
+	m_static_exists = false;
+	m_known_by_count = 0;
 }
 
 ServerActiveObject::~ServerActiveObject()
@@ -76,8 +84,9 @@
 	return 2.0*BS;
 }
 
-ItemStack ServerActiveObject::getWieldedItem() const
+ItemStack ServerActiveObject::getWieldedItem()
 {
+	auto lock = lock_shared_rec();
 	const Inventory *inv = getInventory();
 	if(inv)
 	{
@@ -90,6 +99,7 @@
 
 bool ServerActiveObject::setWieldedItem(const ItemStack &item)
 {
+	auto lock = lock_unique_rec();
 	if(Inventory *inv = getInventory()) {
 		if (InventoryList *list = inv->getList(getWieldList())) {
 			list->changeItem(getWieldIndex(), item);
