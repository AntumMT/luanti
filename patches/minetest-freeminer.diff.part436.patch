diff -ruN minetest-master/src/script/cpp_api/s_base.h minetest-freeminer/src/script/cpp_api/s_base.h
--- minetest-master/src/script/cpp_api/s_base.h	2016-09-03 16:15:52.425778000 -0700
+++ minetest-freeminer/src/script/cpp_api/s_base.h	2016-09-03 15:43:59.838740000 -0700
@@ -1,20 +1,23 @@
 /*
-Minetest
+script/cpp_api/s_base.h
 Copyright (C) 2013 celeron55, Perttu Ahola <celeron55@gmail.com>
+*/
+
+/*
+This file is part of Freeminer.
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 2.1 of the License, or
+Freeminer is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
-This program is distributed in the hope that it will be useful,
+Freeminer  is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+GNU General Public License for more details.
 
-You should have received a copy of the GNU Lesser General Public License along
-with this program; if not, write to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+You should have received a copy of the GNU General Public License
+along with Freeminer.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #ifndef S_BASE_H_
@@ -34,7 +37,9 @@
 #include "common/c_types.h"
 #include "common/c_internal.h"
 
+/*
 #define SCRIPTAPI_LOCK_DEBUG
+*/
 #define SCRIPTAPI_DEBUG
 
 // MUST be an invalid mod name so that mods can't
@@ -95,6 +100,7 @@
 		{ return m_luastack; }
 
 	void realityCheck();
+
 	void scriptError(int result, const char *fxn);
 	void stackDump(std::ostream &o);
 
@@ -109,7 +115,9 @@
 	void objectrefGetOrCreate(lua_State *L, ServerActiveObject *cobj);
 	void objectrefGet(lua_State *L, u16 id);
 
+public:
 	RecursiveMutex  m_luastackmutex;
+protected:
 	std::string     m_last_run_mod;
 	bool            m_secure;
 #ifdef SCRIPTAPI_LOCK_DEBUG
